apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  annotations:
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
    kapp.k14s.io/identity: v1;pikachu/serving.knative.dev/Service/tanzu-java-web-app-230711;serving.knative.dev/v1
    kapp.k14s.io/original: '{"apiVersion":"serving.knative.dev/v1","kind":"Service","metadata":{"annotations":{"kapp.k14s.io/change-rule":"upsert
      after upserting servicebinding.io/ServiceBindings","kbld.k14s.io/images":"null\n","ootb.apps.tanzu.vmware.com/apidescriptor-ref":"true","ootb.apps.tanzu.vmware.com/servicebinding-workload":"true"},"labels":{"app.kubernetes.io/component":"run","app.kubernetes.io/part-of":"tanzu-java-web-app-230711","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"web","carto.run/workload-name":"tanzu-java-web-app-230711","kapp.k14s.io/app":"1689056989876210764","kapp.k14s.io/association":"v1.636bcdf435865688fc3aca9a708023e8"},"name":"tanzu-java-web-app-230711","namespace":"pikachu"},"spec":{"template":{"metadata":{"annotations":{"autoscaling.knative.dev/minScale":"2","boot.spring.io/version":"2.7.5","conventions.carto.run/applied-conventions":"spring-boot-convention/auto-configure-actuators-check\nspring-boot-convention/spring-boot\nspring-boot-convention/spring-boot-graceful-shutdown\nspring-boot-convention/spring-boot-web\nspring-boot-convention/spring-boot-actuator\nspring-boot-convention/spring-boot-actuator-probes\nspring-boot-convention/app-live-view-appflavour-check\nspring-boot-convention/app-live-view-connector-boot\nspring-boot-convention/app-live-view-appflavours-boot\nappliveview-sample/app-live-view-appflavour-check","developer.conventions/target-containers":"workload"},"labels":{"app.kubernetes.io/component":"run","app.kubernetes.io/part-of":"tanzu-java-web-app-230711","apps.tanzu.vmware.com/auto-configure-actuators":"false","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"web","carto.run/workload-name":"tanzu-java-web-app-230711","conventions.carto.run/framework":"spring-boot","tanzu.app.live.view":"true","tanzu.app.live.view.application.actuator.path":"actuator","tanzu.app.live.view.application.actuator.port":"8080","tanzu.app.live.view.application.flavours":"spring-boot","tanzu.app.live.view.application.name":"tanzu-java-web-app-230711"}},"spec":{"containers":[{"env":[{"name":"JAVA_TOOL_OPTIONS","value":"-Dmanagement.endpoint.health.probes.add-additional-paths=\"true\"
      -Dmanagement.health.probes.enabled=\"true\" -Dserver.port=\"8080\" -Dserver.shutdown.grace-period=\"24s\""}],"image":"306368922826.dkr.ecr.ap-northeast-2.amazonaws.com/tanzu-application-platform/tanzu-java-web-app-230711-pikachu@sha256:7fa2c4ce31a750e91809be252808cfdd1d77948e7dde172051d5dcb806f54248","livenessProbe":{"httpGet":{"path":"/livez","port":8080,"scheme":"HTTP"}},"name":"workload","ports":[{"containerPort":8080,"protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":8080,"scheme":"HTTP"}},"resources":{},"securityContext":{"runAsUser":1000}}],"serviceAccountName":"default"}}}}'
    kapp.k14s.io/original-diff-md5: 41e2400841d3c59663d988148eb12b73
    kbld.k14s.io/images: |
      null
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    serving.knative.dev/creator: system:serviceaccount:pikachu:default
    serving.knative.dev/lastModifier: system:serviceaccount:pikachu:default
  creationTimestamp: "2023-07-11T06:29:49Z"
  generation: 1
  labels:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: tanzu-java-web-app-230711
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    carto.run/workload-name: tanzu-java-web-app-230711
    kapp.k14s.io/app: "1689056989876210764"
    kapp.k14s.io/association: v1.636bcdf435865688fc3aca9a708023e8
  name: tanzu-java-web-app-230711
  namespace: pikachu
  resourceVersion: "231937740"
  uid: 45bc0e80-0f76-4b71-b10c-a512958c8668
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "2"
        boot.spring.io/version: 2.7.5
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
          appliveview-sample/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: tanzu-java-web-app-230711
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: tanzu-java-web-app-230711
        conventions.carto.run/framework: spring-boot
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: tanzu-java-web-app-230711
    spec:
      containerConcurrency: 0
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true"
            -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: 306368922826.dkr.ecr.ap-northeast-2.amazonaws.com/tanzu-application-platform/tanzu-java-web-app-230711-pikachu@sha256:7fa2c4ce31a750e91809be252808cfdd1d77948e7dde172051d5dcb806f54248
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
          successThreshold: 1
        resources: {}
        securityContext:
          runAsUser: 1000
      enableServiceLinks: false
      serviceAccountName: default
      timeoutSeconds: 300
